const express = require("express");
const { createProxyMiddleware } = require("http-proxy-middleware");
const path = require("path");

const app = express();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
const baseUrl = process.env.REACT_APP_BASE_URL;
const apiKey = process.env.X_API_KEY;

if (!baseUrl) {
  console.warn(
    "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è REACT_APP_BASE_URL –Ω–µ –∑–∞–¥–∞–Ω–∞! –ü—Ä–æ–∫—Å–∏ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å."
  );
}
if (!apiKey) {
  console.warn(
    "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è X_API_KEY –Ω–µ –∑–∞–¥–∞–Ω–∞! –ü—Ä–æ–∫—Å–∏ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∫–ª—é—á–∞."
  );
}

// –ü—Ä–æ–∫—Å–∏ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ baseUrl –∑–∞–¥–∞–Ω)
if (baseUrl) {
  app.use(
    "/restapi",
    createProxyMiddleware({
      target: baseUrl,
      changeOrigin: true,
      headers: {
        ...(apiKey ? { "X-API-Key": apiKey } : {}),
      },
      onProxyReq: (proxyReq, req, res) => {
        console.log("‚û°Ô∏è –ü—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å:", req.method, req.originalUrl);
      },
      onError: (err, req, res) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏:", err);
        res.status(500).send("–û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏");
      },
    })
  );
}

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã React
app.use(express.static(path.join(__dirname, "build")));

// Fallback –¥–ª—è SPA
app.get("*", (req, res) => {
  res.sendFile(path.join(__dirname, "build", "index.html"));
});

const PORT = process.env.PORT || 3000;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
process.on("uncaughtException", (err) => {
  console.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:", err);
  process.exit(1);
});

process.on("unhandledRejection", (reason, promise) => {
  console.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:", reason);
  process.exit(1);
});

app
  .listen(PORT, () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üìÅ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑: ${path.join(__dirname, "build")}`);
    console.log(`üåê –ü—Ä–æ–∫—Å–∏ API: ${baseUrl || "–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"}`);
  })
  .on("error", (err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", err);
    process.exit(1);
  });
